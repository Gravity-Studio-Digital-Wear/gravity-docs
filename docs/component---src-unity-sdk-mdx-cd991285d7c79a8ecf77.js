(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{eagg:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a("wx14"),i=a("zLVn"),l=(a("q1tI"),a("7ljp")),r=a("eftB"),b=(a("qKvR"),["components"]),c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!Object.prototype.hasOwnProperty.call(c,"__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/unitySDK.mdx"}});var s={_frontmatter:c},o=r.a;function p(e){var t=e.components,a=Object(i.a)(e,b);return Object(l.b)(o,Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"unity-sdk"},"Unity SDK"),Object(l.b)("p",null,"In order to show wearables in a game (scene) you need to do the next steps."),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Connect to a user’s Metamask wallet on Polygon chain.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Authorize a user in Gravity API.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Fetch user’s wearables")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Equip selected wearable."))),Object(l.b)("p",null,"Flow scheme:"),Object(l.b)("img",{src:"UnityGravitySDKScheme.png",alt:"Flow scheme"}),Object(l.b)("p",null,"A single entry point for Gravity SDK is the class ",Object(l.b)("inlineCode",{parentName:"p"},"GravityLayerEntryPoint"),"."),Object(l.b)("h2",{id:"connection-to-metamask"},"Connection to Metamask"),Object(l.b)("p",null,"To connect to a Metamask wallet, call ",Object(l.b)("inlineCode",{parentName:"p"},"Web3Connect()")," method from ",Object(l.b)("inlineCode",{parentName:"p"},"Assets/Plugins/GravityLayer/Example/Scripts/WebLogin.cs"),"."),Object(l.b)("p",null,"After successful logging in the user’s address will be available at ",Object(l.b)("inlineCode",{parentName:"p"},'PlayerPrefs.GetString("Account")'),"."),Object(l.b)("p",null,"See ",Object(l.b)("inlineCode",{parentName:"p"},"Assets/Plugins/GravityLayer/Example/Scenes/WebLogin.unity")," scene as an example."),Object(l.b)("h2",{id:"authorization"},"Authorization"),Object(l.b)("p",null,"The method ",Object(l.b)("inlineCode",{parentName:"p"},"EstablishConnection()")," from ",Object(l.b)("inlineCode",{parentName:"p"},"Assets/Plugins/GravityLayer/CoreAsync/Utils/Connection.cs")," authorizes users in Gravity API. "),Object(l.b)("p",null,"It will ask the user to sign a message via Metamask and if successful save an authorization token for further requests."),Object(l.b)("p",null,"See ",Object(l.b)("inlineCode",{parentName:"p"},"GravitySDK")," game object and attached ",Object(l.b)("inlineCode",{parentName:"p"},"GLayerManager.cs")," script in ",Object(l.b)("inlineCode",{parentName:"p"},"Assets/Plugins/GravityLayer/Example/Scenes/ExampleGravitySDK.unity")," scene as an example."),Object(l.b)("h2",{id:"fetching-wearables"},"Fetching wearables"),Object(l.b)("p",null,"To fetch wearables call ",Object(l.b)("inlineCode",{parentName:"p"},"FetchWearables()")," method from ",Object(l.b)("inlineCode",{parentName:"p"},"Assets/Plugins/GravityLayer/CoreAsync/Wearables/Wardrobe.cs"),". "),Object(l.b)("p",null,"It will fill in the public variable ",Object(l.b)("inlineCode",{parentName:"p"},"List<Wearable> Wearables"),"."),Object(l.b)("p",null,"See ",Object(l.b)("inlineCode",{parentName:"p"},"FetchGLayerWearables()")," method in ",Object(l.b)("inlineCode",{parentName:"p"},"Assets/Plugins/GravityLayer/Example/Scripts/CustomizedInventory.cs")," script in ",Object(l.b)("inlineCode",{parentName:"p"},"Assets/Plugins/GravityLayer/Example/Scenes/ExampleGravitySDK.unity")," scene as an example."),Object(l.b)("h2",{id:"equipping-wearables"},"Equipping wearables"),Object(l.b)("p",null,"To equip a wearable call ",Object(l.b)("inlineCode",{parentName:"p"},"DownloadAvatar()")," method for the desired ",Object(l.b)("inlineCode",{parentName:"p"},"Wearable")," item from the list ",Object(l.b)("inlineCode",{parentName:"p"},"Wearables")," in the ",Object(l.b)("inlineCode",{parentName:"p"},"Wardrobe")," object."),Object(l.b)("p",null,"You can subscribe to the event ",Object(l.b)("inlineCode",{parentName:"p"},"OnDownloadAvatarFinished")," to react after downloading is finished."),Object(l.b)("p",null,"See ",Object(l.b)("inlineCode",{parentName:"p"},"Avatar Manager")," game object and attached ",Object(l.b)("inlineCode",{parentName:"p"},"AvatarManager.cs")," script in ",Object(l.b)("inlineCode",{parentName:"p"},"Assets/Plugins/GravityLayer/Example/Scenes/ExampleGravitySDK.unity")," scene as an example."))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!Object.prototype.hasOwnProperty.call(p,"__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/unitySDK.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-unity-sdk-mdx-cd991285d7c79a8ecf77.js.map