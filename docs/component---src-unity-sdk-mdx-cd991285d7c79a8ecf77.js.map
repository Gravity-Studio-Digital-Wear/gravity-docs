{"version":3,"sources":["webpack:///./src/unitySDK.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","alt","isMDXComponent"],"mappings":"oRAQaA,EAAe,Q,wNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,aADR,aAGA,oGACA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAd,0DAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qCAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2BAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8BAGJ,qCACA,mBAAKC,IAAI,4BAA4BC,IAAI,gBACzC,0EAAyD,0BAAYF,WAAW,KAAvB,0BAAzD,KACA,kBACE,GAAM,0BADR,0BAGA,8DAA6C,0BAAYA,WAAW,KAAvB,iBAA7C,gBAAuH,0BAAYA,WAAW,KAAvB,2DAAvH,KACA,4FAA2E,0BAAYA,WAAW,KAAvB,oCAA3E,KACA,4BAAW,0BAAYA,WAAW,KAAvB,6DAAX,yBACA,kBACE,GAAM,iBADR,iBAGA,mCAAkB,0BAAYA,WAAW,KAAvB,yBAAlB,SAA6F,0BAAYA,WAAW,KAAvB,6DAA7F,sCACA,gJACA,4BAAW,0BAAYA,WAAW,KAAvB,cAAX,6BAA+F,0BAAYA,WAAW,KAAvB,oBAA/F,cAA0K,0BAAYA,WAAW,KAAvB,sEAA1K,yBACA,kBACE,GAAM,sBADR,sBAGA,gDAA+B,0BAAYA,WAAW,KAAvB,oBAA/B,gBAA4G,0BAAYA,WAAW,KAAvB,+DAA5G,MACA,4DAA2C,0BAAYA,WAAW,KAAvB,4BAA3C,KACA,4BAAW,0BAAYA,WAAW,KAAvB,0BAAX,cAA4F,0BAAYA,WAAW,KAAvB,sEAA5F,cAAyN,0BAAYA,WAAW,KAAvB,sEAAzN,yBACA,kBACE,GAAM,uBADR,uBAGA,iDAAgC,0BAAYA,WAAW,KAAvB,oBAAhC,2BAAwH,0BAAYA,WAAW,KAAvB,YAAxH,uBAAoM,0BAAYA,WAAW,KAAvB,aAApM,WAAqQ,0BAAYA,WAAW,KAAvB,YAArQ,YACA,uDAAsC,0BAAYA,WAAW,KAAvB,4BAAtC,4CACA,4BAAW,0BAAYA,WAAW,KAAvB,kBAAX,6BAAmG,0BAAYA,WAAW,KAAvB,oBAAnG,cAA8K,0BAAYA,WAAW,KAAvB,sEAA9K,+B,sNAKJJ,EAAWO,gBAAiB","file":"component---src-unity-sdk-mdx-cd991285d7c79a8ecf77.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"E:/GTS/src/gravity-docs/node_modules/@nejcm/docz-theme-extended/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"unity-sdk\"\n    }}>{`Unity SDK`}</h1>\n    <p>{`In order to show wearables in a game (scene) you need to do the next steps.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Connect to a user’s Metamask wallet on Polygon chain.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Authorize a user in Gravity API.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Fetch user’s wearables`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Equip selected wearable.`}</p>\n      </li>\n    </ol>\n    <p>{`Flow scheme:`}</p>\n    <img src=\"UnityGravitySDKScheme.png\" alt=\"Flow scheme\" />\n    <p>{`A single entry point for Gravity SDK is the class `}<inlineCode parentName=\"p\">{`GravityLayerEntryPoint`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"connection-to-metamask\"\n    }}>{`Connection to Metamask`}</h2>\n    <p>{`To connect to a Metamask wallet, call `}<inlineCode parentName=\"p\">{`Web3Connect()`}</inlineCode>{` method from `}<inlineCode parentName=\"p\">{`Assets/Plugins/GravityLayer/Example/Scripts/WebLogin.cs`}</inlineCode>{`.`}</p>\n    <p>{`After successful logging in the user’s address will be available at `}<inlineCode parentName=\"p\">{`PlayerPrefs.GetString(\"Account\")`}</inlineCode>{`.`}</p>\n    <p>{`See `}<inlineCode parentName=\"p\">{`Assets/Plugins/GravityLayer/Example/Scenes/WebLogin.unity`}</inlineCode>{` scene as an example.`}</p>\n    <h2 {...{\n      \"id\": \"authorization\"\n    }}>{`Authorization`}</h2>\n    <p>{`The method `}<inlineCode parentName=\"p\">{`EstablishConnection()`}</inlineCode>{` from `}<inlineCode parentName=\"p\">{`Assets/Plugins/GravityLayer/CoreAsync/Utils/Connection.cs`}</inlineCode>{` authorizes users in Gravity API. `}</p>\n    <p>{`It will ask the user to sign a message via Metamask and if successful save an authorization token for further requests.`}</p>\n    <p>{`See `}<inlineCode parentName=\"p\">{`GravitySDK`}</inlineCode>{` game object and attached `}<inlineCode parentName=\"p\">{`GLayerManager.cs`}</inlineCode>{` script in `}<inlineCode parentName=\"p\">{`Assets/Plugins/GravityLayer/Example/Scenes/ExampleGravitySDK.unity`}</inlineCode>{` scene as an example.`}</p>\n    <h2 {...{\n      \"id\": \"fetching-wearables\"\n    }}>{`Fetching wearables`}</h2>\n    <p>{`To fetch wearables call `}<inlineCode parentName=\"p\">{`FetchWearables()`}</inlineCode>{` method from `}<inlineCode parentName=\"p\">{`Assets/Plugins/GravityLayer/CoreAsync/Wearables/Wardrobe.cs`}</inlineCode>{`. `}</p>\n    <p>{`It will fill in the public variable `}<inlineCode parentName=\"p\">{`List<Wearable> Wearables`}</inlineCode>{`.`}</p>\n    <p>{`See `}<inlineCode parentName=\"p\">{`FetchGLayerWearables()`}</inlineCode>{` method in `}<inlineCode parentName=\"p\">{`Assets/Plugins/GravityLayer/Example/Scripts/CustomizedInventory.cs`}</inlineCode>{` script in `}<inlineCode parentName=\"p\">{`Assets/Plugins/GravityLayer/Example/Scenes/ExampleGravitySDK.unity`}</inlineCode>{` scene as an example.`}</p>\n    <h2 {...{\n      \"id\": \"equipping-wearables\"\n    }}>{`Equipping wearables`}</h2>\n    <p>{`To equip a wearable call `}<inlineCode parentName=\"p\">{`DownloadAvatar()`}</inlineCode>{` method for the desired `}<inlineCode parentName=\"p\">{`Wearable`}</inlineCode>{` item from the list `}<inlineCode parentName=\"p\">{`Wearables`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`Wardrobe`}</inlineCode>{` object.`}</p>\n    <p>{`You can subscribe to the event `}<inlineCode parentName=\"p\">{`OnDownloadAvatarFinished`}</inlineCode>{` to react after downloading is finished.`}</p>\n    <p>{`See `}<inlineCode parentName=\"p\">{`Avatar Manager`}</inlineCode>{` game object and attached `}<inlineCode parentName=\"p\">{`AvatarManager.cs`}</inlineCode>{` script in `}<inlineCode parentName=\"p\">{`Assets/Plugins/GravityLayer/Example/Scenes/ExampleGravitySDK.unity`}</inlineCode>{` scene as an example.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}